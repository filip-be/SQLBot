#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cindalnet.SQLBot.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="cdn_tramwaje")]
	public partial class TramwajeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLinie(Linie instance);
    partial void UpdateLinie(Linie instance);
    partial void DeleteLinie(Linie instance);
    partial void InsertPrzyjazd(Przyjazd instance);
    partial void UpdatePrzyjazd(Przyjazd instance);
    partial void DeletePrzyjazd(Przyjazd instance);
    partial void InsertPrzystanek(Przystanek instance);
    partial void UpdatePrzystanek(Przystanek instance);
    partial void DeletePrzystanek(Przystanek instance);
    partial void InsertWariantTrasy(WariantTrasy instance);
    partial void UpdateWariantTrasy(WariantTrasy instance);
    partial void DeleteWariantTrasy(WariantTrasy instance);
    #endregion
		
		public TramwajeDataContext() : 
				base(global::Cindalnet.SQLBot.Properties.Settings.Default.cdn_tramwajeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TramwajeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TramwajeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TramwajeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TramwajeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Linie> Linies
		{
			get
			{
				return this.GetTable<Linie>();
			}
		}
		
		public System.Data.Linq.Table<Przyjazd> Przyjazds
		{
			get
			{
				return this.GetTable<Przyjazd>();
			}
		}
		
		public System.Data.Linq.Table<Przystanek> Przystaneks
		{
			get
			{
				return this.GetTable<Przystanek>();
			}
		}
		
		public System.Data.Linq.Table<WariantTrasy> WariantTrasies
		{
			get
			{
				return this.GetTable<WariantTrasy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Linie")]
	public partial class Linie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazwa;
		
		private string _Typ;
		
		private EntitySet<WariantTrasy> _WariantTrasies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnTypChanging(string value);
    partial void OnTypChanged();
    #endregion
		
		public Linie()
		{
			this._WariantTrasies = new EntitySet<WariantTrasy>(new Action<WariantTrasy>(this.attach_WariantTrasies), new Action<WariantTrasy>(this.detach_WariantTrasies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typ", DbType="NChar(100)")]
		public string Typ
		{
			get
			{
				return this._Typ;
			}
			set
			{
				if ((this._Typ != value))
				{
					this.OnTypChanging(value);
					this.SendPropertyChanging();
					this._Typ = value;
					this.SendPropertyChanged("Typ");
					this.OnTypChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Linie_WariantTrasy", Storage="_WariantTrasies", ThisKey="Id", OtherKey="LiniaId")]
		public EntitySet<WariantTrasy> WariantTrasies
		{
			get
			{
				return this._WariantTrasies;
			}
			set
			{
				this._WariantTrasies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WariantTrasies(WariantTrasy entity)
		{
			this.SendPropertyChanging();
			entity.Linie = this;
		}
		
		private void detach_WariantTrasies(WariantTrasy entity)
		{
			this.SendPropertyChanging();
			entity.Linie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przyjazd")]
	public partial class Przyjazd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PrzystanekId;
		
		private string _Dzień;
		
		private int _Godzina;
		
		private int _Minuta;
		
		private EntityRef<Przystanek> _Przystanek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPrzystanekIdChanging(int value);
    partial void OnPrzystanekIdChanged();
    partial void OnDzieńChanging(string value);
    partial void OnDzieńChanged();
    partial void OnGodzinaChanging(int value);
    partial void OnGodzinaChanged();
    partial void OnMinutaChanging(int value);
    partial void OnMinutaChanged();
    #endregion
		
		public Przyjazd()
		{
			this._Przystanek = default(EntityRef<Przystanek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrzystanekId", DbType="Int NOT NULL")]
		public int PrzystanekId
		{
			get
			{
				return this._PrzystanekId;
			}
			set
			{
				if ((this._PrzystanekId != value))
				{
					if (this._Przystanek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrzystanekIdChanging(value);
					this.SendPropertyChanging();
					this._PrzystanekId = value;
					this.SendPropertyChanged("PrzystanekId");
					this.OnPrzystanekIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dzień", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Dzień
		{
			get
			{
				return this._Dzień;
			}
			set
			{
				if ((this._Dzień != value))
				{
					this.OnDzieńChanging(value);
					this.SendPropertyChanging();
					this._Dzień = value;
					this.SendPropertyChanged("Dzień");
					this.OnDzieńChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Godzina", DbType="Int NOT NULL")]
		public int Godzina
		{
			get
			{
				return this._Godzina;
			}
			set
			{
				if ((this._Godzina != value))
				{
					this.OnGodzinaChanging(value);
					this.SendPropertyChanging();
					this._Godzina = value;
					this.SendPropertyChanged("Godzina");
					this.OnGodzinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minuta", DbType="Int NOT NULL")]
		public int Minuta
		{
			get
			{
				return this._Minuta;
			}
			set
			{
				if ((this._Minuta != value))
				{
					this.OnMinutaChanging(value);
					this.SendPropertyChanging();
					this._Minuta = value;
					this.SendPropertyChanged("Minuta");
					this.OnMinutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przystanek_Przyjazd", Storage="_Przystanek", ThisKey="PrzystanekId", OtherKey="Id", IsForeignKey=true)]
		public Przystanek Przystanek
		{
			get
			{
				return this._Przystanek.Entity;
			}
			set
			{
				Przystanek previousValue = this._Przystanek.Entity;
				if (((previousValue != value) 
							|| (this._Przystanek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przystanek.Entity = null;
						previousValue.Przyjazds.Remove(this);
					}
					this._Przystanek.Entity = value;
					if ((value != null))
					{
						value.Przyjazds.Add(this);
						this._PrzystanekId = value.Id;
					}
					else
					{
						this._PrzystanekId = default(int);
					}
					this.SendPropertyChanged("Przystanek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przystanek")]
	public partial class Przystanek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WariantId;
		
		private string _Nazwa;
		
		private string _Ulica;
		
		private EntitySet<Przyjazd> _Przyjazds;
		
		private EntityRef<WariantTrasy> _WariantTrasy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWariantIdChanging(int value);
    partial void OnWariantIdChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    #endregion
		
		public Przystanek()
		{
			this._Przyjazds = new EntitySet<Przyjazd>(new Action<Przyjazd>(this.attach_Przyjazds), new Action<Przyjazd>(this.detach_Przyjazds));
			this._WariantTrasy = default(EntityRef<WariantTrasy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WariantId", DbType="Int NOT NULL")]
		public int WariantId
		{
			get
			{
				return this._WariantId;
			}
			set
			{
				if ((this._WariantId != value))
				{
					if (this._WariantTrasy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWariantIdChanging(value);
					this.SendPropertyChanging();
					this._WariantId = value;
					this.SendPropertyChanged("WariantId");
					this.OnWariantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NChar(100)")]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przystanek_Przyjazd", Storage="_Przyjazds", ThisKey="Id", OtherKey="PrzystanekId")]
		public EntitySet<Przyjazd> Przyjazds
		{
			get
			{
				return this._Przyjazds;
			}
			set
			{
				this._Przyjazds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WariantTrasy_Przystanek", Storage="_WariantTrasy", ThisKey="WariantId", OtherKey="Id", IsForeignKey=true)]
		public WariantTrasy WariantTrasy
		{
			get
			{
				return this._WariantTrasy.Entity;
			}
			set
			{
				WariantTrasy previousValue = this._WariantTrasy.Entity;
				if (((previousValue != value) 
							|| (this._WariantTrasy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WariantTrasy.Entity = null;
						previousValue.Przystaneks.Remove(this);
					}
					this._WariantTrasy.Entity = value;
					if ((value != null))
					{
						value.Przystaneks.Add(this);
						this._WariantId = value.Id;
					}
					else
					{
						this._WariantId = default(int);
					}
					this.SendPropertyChanged("WariantTrasy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Przyjazds(Przyjazd entity)
		{
			this.SendPropertyChanging();
			entity.Przystanek = this;
		}
		
		private void detach_Przyjazds(Przyjazd entity)
		{
			this.SendPropertyChanging();
			entity.Przystanek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WariantTrasy")]
	public partial class WariantTrasy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LiniaId;
		
		private string _Nazwa;
		
		private string _Start;
		
		private string _Koniec;
		
		private EntitySet<Przystanek> _Przystaneks;
		
		private EntityRef<Linie> _Linie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLiniaIdChanging(int value);
    partial void OnLiniaIdChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnStartChanging(string value);
    partial void OnStartChanged();
    partial void OnKoniecChanging(string value);
    partial void OnKoniecChanged();
    #endregion
		
		public WariantTrasy()
		{
			this._Przystaneks = new EntitySet<Przystanek>(new Action<Przystanek>(this.attach_Przystaneks), new Action<Przystanek>(this.detach_Przystaneks));
			this._Linie = default(EntityRef<Linie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiniaId", DbType="Int NOT NULL")]
		public int LiniaId
		{
			get
			{
				return this._LiniaId;
			}
			set
			{
				if ((this._LiniaId != value))
				{
					if (this._Linie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLiniaIdChanging(value);
					this.SendPropertyChanging();
					this._LiniaId = value;
					this.SendPropertyChanged("LiniaId");
					this.OnLiniaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Koniec", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Koniec
		{
			get
			{
				return this._Koniec;
			}
			set
			{
				if ((this._Koniec != value))
				{
					this.OnKoniecChanging(value);
					this.SendPropertyChanging();
					this._Koniec = value;
					this.SendPropertyChanged("Koniec");
					this.OnKoniecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WariantTrasy_Przystanek", Storage="_Przystaneks", ThisKey="Id", OtherKey="WariantId")]
		public EntitySet<Przystanek> Przystaneks
		{
			get
			{
				return this._Przystaneks;
			}
			set
			{
				this._Przystaneks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Linie_WariantTrasy", Storage="_Linie", ThisKey="LiniaId", OtherKey="Id", IsForeignKey=true)]
		public Linie Linie
		{
			get
			{
				return this._Linie.Entity;
			}
			set
			{
				Linie previousValue = this._Linie.Entity;
				if (((previousValue != value) 
							|| (this._Linie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Linie.Entity = null;
						previousValue.WariantTrasies.Remove(this);
					}
					this._Linie.Entity = value;
					if ((value != null))
					{
						value.WariantTrasies.Add(this);
						this._LiniaId = value.Id;
					}
					else
					{
						this._LiniaId = default(int);
					}
					this.SendPropertyChanged("Linie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Przystaneks(Przystanek entity)
		{
			this.SendPropertyChanging();
			entity.WariantTrasy = this;
		}
		
		private void detach_Przystaneks(Przystanek entity)
		{
			this.SendPropertyChanging();
			entity.WariantTrasy = null;
		}
	}
}
#pragma warning restore 1591
